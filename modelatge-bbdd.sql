-- MySQL Script generated by MySQL Workbench
-- Wed Mar  4 12:39:36 2020
-- Model: New Model    Version: 1.0
-- MySQL Workbench Forward Engineering

SET @OLD_UNIQUE_CHECKS=@@UNIQUE_CHECKS, UNIQUE_CHECKS=0;
SET @OLD_FOREIGN_KEY_CHECKS=@@FOREIGN_KEY_CHECKS, FOREIGN_KEY_CHECKS=0;
SET @OLD_SQL_MODE=@@SQL_MODE, SQL_MODE='ONLY_FULL_GROUP_BY,STRICT_TRANS_TABLES,NO_ZERO_IN_DATE,NO_ZERO_DATE,ERROR_FOR_DIVISION_BY_ZERO,NO_ENGINE_SUBSTITUTION';

-- -----------------------------------------------------
-- Schema Cul_dAmpolla
-- -----------------------------------------------------

-- -----------------------------------------------------
-- Schema Cul_dAmpolla
-- -----------------------------------------------------
CREATE SCHEMA IF NOT EXISTS `Cul_dAmpolla` DEFAULT CHARACTER SET utf8 ;
USE `Cul_dAmpolla` ;

-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`supplierAdress`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`supplierAdress` (
  `idSupplierAdress` INT NOT NULL,
  `streetSupplier` VARCHAR(45) NULL,
  `floorSupplier` VARCHAR(45) NULL,
  `doorSupplier` VARCHAR(45) NULL,
  `countrySupplier` VARCHAR(45) NULL,
  `numberSupplier` INT NULL,
  PRIMARY KEY (`idSupplierAdress`),
  UNIQUE INDEX `idProveedor_UNIQUE` (`idSupplierAdress` ASC) VISIBLE)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`supplier`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`supplier` (
  `idSupplier` INT NOT NULL,
  `nameSupplier` VARCHAR(45) NULL,
  `tlfSupplier` VARCHAR(45) NULL,
  `nifSupplier` VARCHAR(45) NULL,
  `SupplierAdress_idSupplierAdress` INT NOT NULL,
  PRIMARY KEY (`idSupplier`),
  UNIQUE INDEX `idProveedor_UNIQUE` (`idSupplier` ASC) VISIBLE,
  INDEX `fk_Supplier_SupplierAdress1_idx` (`SupplierAdress_idSupplierAdress` ASC) VISIBLE,
  CONSTRAINT `fk_Supplier_SupplierAdress1`
    FOREIGN KEY (`SupplierAdress_idSupplierAdress`)
    REFERENCES `Cul_dAmpolla`.`supplierAdress` (`idSupplierAdress`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`customers`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`customers` (
  `idCustomers` INT NOT NULL,
  `nameCustomers` VARCHAR(45) NULL,
  `emailCustomers` VARCHAR(45) NULL,
  `dateRegisterCustomers` VARCHAR(45) NULL,
  `streetClient` VARCHAR(45) NULL,
  `doorCustomers` VARCHAR(45) NULL,
  `countryCustomers` VARCHAR(45) NULL,
  `recomendedCoustomers` VARCHAR(45) NULL,
  `Customers_idCustomers` INT NOT NULL,
  PRIMARY KEY (`idCustomers`),
  INDEX `fk_Customers_Customers1_idx` (`Customers_idCustomers` ASC) VISIBLE,
  CONSTRAINT `fk_Customers_Customers1`
    FOREIGN KEY (`Customers_idCustomers`)
    REFERENCES `Cul_dAmpolla`.`customers` (`idCustomers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`graduationGlasses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`graduationGlasses` (
  `idgraduationGlasses` INT NOT NULL,
  `graduationGlassLeft` FLOAT NULL,
  `graduationGlassRight` FLOAT NULL,
  UNIQUE INDEX `idgraduationGlasses_UNIQUE` (`idgraduationGlasses` ASC) VISIBLE,
  PRIMARY KEY (`idgraduationGlasses`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`glasses`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`glasses` (
  `idSunglasses` INT NOT NULL,
  `nameGlasses` VARCHAR(45) NULL,
  `Customers_idCustomers` INT NOT NULL,
  `Brands_idBrands` INT NOT NULL,
  `Supplier_idSupplier` INT NOT NULL,
  `tiposMontura` ENUM("flotante", "pasta", "metalica") NULL,
  `graduationGlasses_idgraduationGlasses` INT NOT NULL,
  PRIMARY KEY (`idSunglasses`),
  UNIQUE INDEX `idSunglasses_UNIQUE` (`idSunglasses` ASC) VISIBLE,
  INDEX `fk_Glasses_Customers1_idx` (`Customers_idCustomers` ASC) VISIBLE,
  INDEX `fk_Glasses_Brands1_idx` (`Brands_idBrands` ASC) VISIBLE,
  INDEX `fk_Glasses_Supplier1_idx` (`Supplier_idSupplier` ASC) VISIBLE,
  INDEX `fk_Glasses_graduationGlasses1_idx` (`graduationGlasses_idgraduationGlasses` ASC) VISIBLE,
  CONSTRAINT `fk_Glasses_Customers1`
    FOREIGN KEY (`Customers_idCustomers`)
    REFERENCES `Cul_dAmpolla`.`customers` (`idCustomers`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Glasses_Brands1`
    FOREIGN KEY (`Brands_idBrands`)
    REFERENCES `Cul_dAmpolla`.`brands` (`idBrands`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Glasses_Supplier1`
    FOREIGN KEY (`Supplier_idSupplier`)
    REFERENCES `Cul_dAmpolla`.`supplier` (`idSupplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Glasses_graduationGlasses1`
    FOREIGN KEY (`graduationGlasses_idgraduationGlasses`)
    REFERENCES `Cul_dAmpolla`.`graduationGlasses` (`idgraduationGlasses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`glassesByBrands`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`glassesByBrands` (
  `idGlassesByBrands` INT NULL,
  `Glasses_idSunglasses` INT NULL,
  INDEX `fk_GlassesByBrands_Glasses1_idx` (`Glasses_idSunglasses` ASC) VISIBLE,
  CONSTRAINT `fk_GlassesByBrands_Glasses1`
    FOREIGN KEY (`Glasses_idSunglasses`)
    REFERENCES `Cul_dAmpolla`.`glasses` (`idSunglasses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`brands`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`brands` (
  `idBrands` INT NOT NULL,
  `nameBrand` VARCHAR(45) NULL,
  `Supplier_idSupplier` INT NOT NULL,
  `GlassesByBrands_idGlassesByBrands` INT NOT NULL,
  `GlassesByBrands_Glasses_idSunglasses` INT NOT NULL,
  PRIMARY KEY (`idBrands`, `GlassesByBrands_idGlassesByBrands`, `GlassesByBrands_Glasses_idSunglasses`),
  INDEX `fk_Brands_Supplier1_idx` (`Supplier_idSupplier` ASC) VISIBLE,
  INDEX `fk_Brands_GlassesByBrands1_idx` (`GlassesByBrands_idGlassesByBrands` ASC, `GlassesByBrands_Glasses_idSunglasses` ASC) VISIBLE,
  CONSTRAINT `fk_Brands_Supplier1`
    FOREIGN KEY (`Supplier_idSupplier`)
    REFERENCES `Cul_dAmpolla`.`supplier` (`idSupplier`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_Brands_GlassesByBrands1`
    FOREIGN KEY (`GlassesByBrands_idGlassesByBrands` , `GlassesByBrands_Glasses_idSunglasses`)
    REFERENCES `Cul_dAmpolla`.`glassesByBrands` (`idGlassesByBrands` , `Glasses_idSunglasses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`employees`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`employees` (
  `idEmployees` INT NOT NULL,
  UNIQUE INDEX `idEmployees_UNIQUE` (`idEmployees` ASC) VISIBLE,
  PRIMARY KEY (`idEmployees`))
ENGINE = InnoDB;


-- -----------------------------------------------------
-- Table `Cul_dAmpolla`.`glassesByEmpolyee`
-- -----------------------------------------------------
CREATE TABLE IF NOT EXISTS `Cul_dAmpolla`.`glassesByEmpolyee` (
  `Employees_idEmployees` INT NOT NULL,
  `Glasses_idSunglasses` INT NOT NULL,
  PRIMARY KEY (`Employees_idEmployees`, `Glasses_idSunglasses`),
  INDEX `fk_GlassesByEmpolyee_Glasses1_idx` (`Glasses_idSunglasses` ASC) VISIBLE,
  CONSTRAINT `fk_GlassesByEmpolyee_Employees1`
    FOREIGN KEY (`Employees_idEmployees`)
    REFERENCES `Cul_dAmpolla`.`employees` (`idEmployees`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION,
  CONSTRAINT `fk_GlassesByEmpolyee_Glasses1`
    FOREIGN KEY (`Glasses_idSunglasses`)
    REFERENCES `Cul_dAmpolla`.`glasses` (`idSunglasses`)
    ON DELETE NO ACTION
    ON UPDATE NO ACTION)
ENGINE = InnoDB;


SET SQL_MODE=@OLD_SQL_MODE;
SET FOREIGN_KEY_CHECKS=@OLD_FOREIGN_KEY_CHECKS;
SET UNIQUE_CHECKS=@OLD_UNIQUE_CHECKS;
